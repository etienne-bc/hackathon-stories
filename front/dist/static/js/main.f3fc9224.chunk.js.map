{"version":3,"sources":["enums/fetch-status.enum.ts","hooks/fetch.hook.ts","enums/story-type.enum.ts","components/content-center.component.tsx","components/intro-story.component.tsx","components/favorite-team-story.component.tsx","components/least-favorite-team-story.component.tsx","components/favorite-team-list-story.component.tsx","services/date.service.ts","components/biggest-win-story.component.tsx","components/biggest-win-list-story.component.tsx","components/luckiest-win-story.component.tsx","components/luckiest-win-list-story.component.tsx","components/biggest-odds-story.component.tsx","components/biggest-odds-list-story.component.tsx","components/best-day-story.component.tsx","components/best-day-list-story.component.tsx","components/thanks-story.component.tsx","hooks/stories.hook.ts","services/story-builder.service.tsx","config/configuration.ts","components/username.component.tsx","App.tsx","hooks/query-params.hook.ts","reportWebVitals.ts","index.tsx"],"names":["FetchStatusEnum","useFetch","url","useState","idle","status","setStatus","undefined","data","setData","useEffect","fetchData","a","fetching","fetch","response","json","responseData","fetched","StoryTypeEnum","ContentCenter","title","image_url","text","link_text","web_link","className","src","alt","width","href","IntroStory","step","setStep","duration","interval","setTimeout","clearTimeout","FavoriteTeamStory","team","count","LeastFavoriteTeamStory","FavoriteTeamListStory","teams","FAVORITE_TEAM_1","NB_BET_FAVORITE_TEAM_1","NB_BET_FAVORITE_TEAM_2","FAVORITE_TEAM_2","NB_BET_FAVORITE_TEAM_3","FAVORITE_TEAM_3","NB_BET_FAVORITE_TEAM_4","FAVORITE_TEAM_4","NB_BET_FAVORITE_TEAM_5","FAVORITE_TEAM_5","months","dayMonth","date","parsed","split","map","i","parseInt","year","month","day","parseDate","BiggestWinStory","nbSelection","win","selection","BiggestWinListStory","wins","getLabel","NB_SELECTION_BIGGEST_WIN_1","BIGGEST_WIN_1","BIGGEST_WIN_2","NB_SELECTION_BIGGEST_WIN_2","BIGGEST_WIN_3","NB_SELECTION_BIGGEST_WIN_3","BIGGEST_WIN_4","NB_SELECTION_BIGGEST_WIN_4","BIGGEST_WIN_5","NB_SELECTION_BIGGEST_WIN_5","LuckiestWinStory","rate","LuckiestWinListStory","LUCKIEST_TEAM_1","WIN_RATE_LUCKIEST_TEAM_1","WIN_RATE_LUCKIEST_TEAM_2","LUCKIEST_TEAM_2","WIN_RATE_LUCKIEST_TEAM_3","LUCKIEST_TEAM_3","WIN_RATE_LUCKIEST_TEAM_4","LUCKIEST_TEAM_4","WIN_RATE_LUCKIEST_TEAM_5","LUCKIEST_TEAM_5","BiggestOddsStory","odds","BiggestOddsListStory","NB_SELECTION_BIGGEST_ODD_1","BIGGEST_ODD_1","BIGGEST_ODD_2","NB_SELECTION_BIGGEST_ODD_2","BIGGEST_ODD_3","NB_SELECTION_BIGGEST_ODD_3","BIGGEST_ODD_4","NB_SELECTION_BIGGEST_ODD_4","BIGGEST_ODD_5","NB_SELECTION_BIGGEST_ODD_5","BestDayStory","amount","bet","BestDayListStory","days","BEST_DAY_DATE_1","BEST_DAY_WIN_AMOUNT_1","BEST_DAY_WIN_AMOUNT_2","BEST_DAY_DATE_2","BEST_DAY_WIN_AMOUNT_3","BEST_DAY_DATE_3","BEST_DAY_WIN_AMOUNT_4","BEST_DAY_DATE_4","BEST_DAY_WIN_AMOUNT_5","BEST_DAY_DATE_5","ThanksStory","useStories","username","stories","setStories","length","story","cardType","Intro","content","FavoriteTeam","payload","FavoriteTeamList","LeastPreferedTeam","LEAST_FAVORITE_TEAM_1","NB_BET_LEAST_FAVORITE_TEAM_1","BiggestWin","DATE_BIGGEST_WIN_1","BiggestWinList","LuckiestWin","LuckiestWinList","BiggestOdds","DATE_BIGGEST_ODD_1","BiggestOddsList","BestDay","BEST_DAY_NB_BET_1","BestDayList","Thanks","storyBuilder","configuration","userQueryParam","Username","value","setValue","usernames","filter","toLowerCase","includes","_","index","onChange","e","target","type","autoFocus","App","key","user","URLSearchParams","window","location","search","get","defaultInterval","height","autoPlay","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3fc9224.chunk.js","sourcesContent":["export enum FetchStatusEnum {\n    idle = 0,\n    fetching = 1,\n    fetched = 2,\n}\n","import { useEffect, useState } from 'react';\nimport { FetchStatusEnum } from '../enums/fetch-status.enum';\nimport { useFetchResponse } from '../interfaces/use-fetch-response.interface';\n\nexport function useFetch<T>(url: string): useFetchResponse<T> {\n    const [status, setStatus] = useState<FetchStatusEnum>(FetchStatusEnum.idle);\n    const [data, setData] = useState<T | undefined>(undefined);\n\n    useEffect(() => {\n        if (!url) return;\n        const fetchData = async () => {\n            setStatus(FetchStatusEnum.fetching);\n            const response = await fetch(url);\n            const responseData = (await response.json()) as T;\n            setStatus(FetchStatusEnum.fetched);\n            setData(responseData);\n        };\n\n        fetchData();\n    }, [url]);\n\n    return { status, data };\n}\n","export enum StoryTypeEnum {\n    Intro = 'INTRO',\n    FavoriteTeam = 'FAVORITE_TEAM',\n    FavoriteTeamList = 'FAVORITE_TEAM_LIST',\n    LeastPreferedTeam = 'LEAST_PREFERED_TEAM',\n    LuckiestWin = 'LUCKIEST_WIN',\n    LuckiestWinList = 'LUCKIEST_WIN_LIST',\n    BiggestWin = 'BIGGEST_WIN',\n    BiggestWinList = 'BIGGEST_WIN_LIST',\n    BiggestOdds = 'BIGGEST_ODDS',\n    BiggestOddsList = 'BIGGEST_ODDS_LIST',\n    BestDay = 'BEST_DAY',\n    BestDayList = 'BEST_DAY_LIST',\n    ContentCenter = 'CONTENT_CENTER',\n    Thanks = 'THANKS',\n}\n","import React from 'react';\nimport './content-center.component.css';\n\nexport const ContentCenter = ({\n    title,\n    image_url,\n    text,\n    link_text,\n    web_link,\n}: {\n    title: string;\n    image_url: string;\n    text: string;\n    link_text: string;\n    web_link: string;\n}) => {\n    return (\n        <div className=\"contentCenter\">\n            <div>\n                <img src={image_url} alt=\"actu indispo\" width=\"100%\" />\n            </div>\n            <div className=\"yellow xl\">{title}</div>\n            <div></div>\n            <div>{text}</div>\n            <div>\n                <a href={web_link}>{link_text}</a>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport './intro-story.component.css';\n\nexport const IntroStory = () => {\n    const [step, setStep] = useState(0);\n    useEffect(() => {\n        let duration: number;\n        if (step === 0) {\n            duration = 2500;\n        } else if (step === 1) {\n            duration = 1500;\n        } else {\n            duration = 700;\n        }\n        const interval = setTimeout(() => {\n            setStep(step + 1);\n        }, duration);\n        return () => clearTimeout(interval);\n    }, [step]);\n\n    if (step === 0) {\n        return (\n            <div className=\"introStory\">\n                <div>Découvre ton</div>\n                <div className=\"l yellow\">RÉCAPITULATIF</div>\n                <div>\n                    de l'année <span className=\"yellow\">2021</span>\n                </div>\n            </div>\n        );\n    }\n    if (step === 1) {\n        return (\n            <div className=\"introStory\">\n                <span>Tu es prêt ?</span>\n            </div>\n        );\n    }\n    if (step === 2) {\n        return (\n            <div className=\"introStory\">\n                <span className=\"xxl\">3</span>\n            </div>\n        );\n    }\n    if (step === 3) {\n        return (\n            <div className=\"introStory\">\n                <span className=\"xxl\">2</span>\n            </div>\n        );\n    }\n    return (\n        <div className=\"introStory\">\n            <span className=\"xxl\">1</span>\n        </div>\n    );\n};\n","import React from 'react';\nimport './favorite-team-story.component.css';\n\nexport const FavoriteTeamStory = ({ team, count }: { team: string; count: number }) => {\n    return (\n        <div className=\"single\">\n            <div>\n                <img src=\"/heart.svg\" alt=\"heart\" />\n            </div>\n            <div className=\"xs\">Ton équipe de cœur</div>\n            <div className=\"l\">{team}</div>\n            <div className=\"yellow xl\">\n                <span className=\"xxl\">{count}</span>&nbsp;PARIS\n            </div>\n            <div className=\"xxs\">\n                Tu as joué le {team} vainqueur à {count} reprises\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './least-favorite-team-story.component.css';\n\nexport const LeastFavoriteTeamStory = ({ team, count }: { team: string; count: number }) => {\n    return (\n        <div className=\"single\">\n            <div>\n                <img src=\"/heart-broken.svg\" alt=\"heart\" />\n            </div>\n            <div className=\"xs\">Ton équipe souffre douleur</div>\n            <div className=\"l\">{team}</div>\n            <div className=\"yellow xl\">\n                <span className=\"xxl\">{count}</span>&nbsp;PARIS\n            </div>\n            <div className=\"xxs\">\n                Tu as joué le {team} perdant à {count} reprises\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './favorite-team-list-story.component.css';\n\ninterface Teams {\n    FAVORITE_TEAM_1: string;\n    NB_BET_FAVORITE_TEAM_1: number;\n    FAVORITE_TEAM_2: string;\n    NB_BET_FAVORITE_TEAM_2: number;\n    FAVORITE_TEAM_3: string;\n    NB_BET_FAVORITE_TEAM_3: number;\n    FAVORITE_TEAM_4: string;\n    NB_BET_FAVORITE_TEAM_4: number;\n    FAVORITE_TEAM_5: string;\n    NB_BET_FAVORITE_TEAM_5: number;\n}\n\nexport const FavoriteTeamListStory = ({ teams }: { teams: Teams }) => {\n    return (\n        <div className=\"listComponent\">\n            <div>\n                Les équipes que tu voyais\n                <br />\n                <span className=\"yellow\">le + gagner</span> en 2021\n            </div>\n            <div className=\"list xs\">\n                <div>\n                    <div>1. {teams.FAVORITE_TEAM_1}</div>\n                    <div className=\"yellow\">\n                        {teams.NB_BET_FAVORITE_TEAM_1} <span className=\"xxs\">paris</span>\n                    </div>\n                </div>\n                {teams.NB_BET_FAVORITE_TEAM_2 !== 0 && (\n                    <div>\n                        <div>2. {teams.FAVORITE_TEAM_2}</div>\n                        <div className=\"yellow\">\n                            {teams.NB_BET_FAVORITE_TEAM_2} <span className=\"xxs\">paris</span>\n                        </div>\n                    </div>\n                )}\n                {teams.NB_BET_FAVORITE_TEAM_3 !== 0 && (\n                    <div>\n                        <div>3. {teams.FAVORITE_TEAM_3}</div>\n                        <div className=\"yellow\">\n                            {teams.NB_BET_FAVORITE_TEAM_3} <span className=\"xxs\">paris</span>\n                        </div>\n                    </div>\n                )}\n                {teams.NB_BET_FAVORITE_TEAM_4 !== 0 && (\n                    <div>\n                        <div>4. {teams.FAVORITE_TEAM_4}</div>\n                        <div className=\"yellow\">\n                            {teams.NB_BET_FAVORITE_TEAM_4} <span className=\"xxs\">paris</span>\n                        </div>\n                    </div>\n                )}\n                {teams.NB_BET_FAVORITE_TEAM_5 !== 0 && (\n                    <div>\n                        <div>5. {teams.FAVORITE_TEAM_5}</div>\n                        <div className=\"yellow\">\n                            {teams.NB_BET_FAVORITE_TEAM_5} <span className=\"xxs\">paris</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","const months = [\n    undefined,\n    'Janvier',\n    'Février',\n    'Mars',\n    'Avril',\n    'Mai',\n    'Juin',\n    'Juillet',\n    'Août',\n    'Septembre',\n    'Octobre',\n    'Novembre',\n    'Décembre',\n];\n\nexport const parseDate = (date: string) => {\n    const [year, month, day] = date.split('-').map(i => parseInt(i, 10));\n    return { year, day, month: months[month] };\n};\n\nexport const dayMonth = (date: string) => {\n    const parsed = parseDate(date);\n    return `${parsed.day} ${parsed.month}`;\n};\n","import React from 'react';\nimport './biggest-win-story.component.css';\nimport { dayMonth } from '../services/date.service';\n\nexport const BiggestWinStory = ({ win, date, selection }: { date: string; win: number; selection: number }) => {\n    const getLabel = (nbSelection: number) =>\n        nbSelection === 1 ? 'pari simple' : `combiné de ${nbSelection} sélections`;\n\n    return (\n        <div className=\"single\">\n            <div>\n                <img src=\"/slot.svg\" alt=\"heart\" />\n            </div>\n            <div className=\"xs\">Ton plus gros gain</div>\n            <div className=\"yellow xl\">\n                <span className=\"xxl\">{win}</span>&nbsp;€\n            </div>\n            <div className=\"xs\">C'était le {dayMonth(date)}</div>\n            <div className=\"xs\">Tu as passé un {getLabel(selection)}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './biggest-win-list-story.component.css';\n\ninterface Wins {\n    BIGGEST_WIN_1: number;\n    DATE_BIGGEST_WIN_1: string;\n    NB_SELECTION_BIGGEST_WIN_1: number;\n    BIGGEST_WIN_2: number;\n    DATE_BIGGEST_WIN_2: string;\n    NB_SELECTION_BIGGEST_WIN_2: number;\n    BIGGEST_WIN_3: number;\n    DATE_BIGGEST_WIN_3: string;\n    NB_SELECTION_BIGGEST_WIN_3: number;\n    BIGGEST_WIN_4: number;\n    DATE_BIGGEST_WIN_4: string;\n    NB_SELECTION_BIGGEST_WIN_4: number;\n    BIGGEST_WIN_5: number;\n    DATE_BIGGEST_WIN_5: string;\n    NB_SELECTION_BIGGEST_WIN_5: number;\n}\n\nexport const BiggestWinListStory = ({ wins }: { wins: Wins }) => {\n    const getLabel = (nbSelection: number) =>\n        nbSelection === 1 ? 'Pari simple' : `Combiné de ${nbSelection} sélections`;\n\n    return (\n        <div className=\"listComponent\">\n            <div>\n                Tes <span className=\"yellow\">plus gros gains</span>\n                <br />\n                cette année\n            </div>\n            <div className=\"list xs\">\n                <div>\n                    <div>1. {getLabel(wins.NB_SELECTION_BIGGEST_WIN_1)}</div>\n                    <div className=\"yellow\">{wins.BIGGEST_WIN_1}&nbsp;€</div>\n                </div>\n                {wins.BIGGEST_WIN_2 !== 0 && (\n                    <div>\n                        <div>2. {getLabel(wins.NB_SELECTION_BIGGEST_WIN_2)}</div>\n                        <div className=\"yellow\">{wins.BIGGEST_WIN_2}&nbsp;€</div>\n                    </div>\n                )}\n                {wins.BIGGEST_WIN_3 !== 0 && (\n                    <div>\n                        <div>3. {getLabel(wins.NB_SELECTION_BIGGEST_WIN_3)}</div>\n                        <div className=\"yellow\">{wins.BIGGEST_WIN_3}&nbsp;€</div>\n                    </div>\n                )}\n                {wins.BIGGEST_WIN_4 !== 0 && (\n                    <div>\n                        <div>4. {getLabel(wins.NB_SELECTION_BIGGEST_WIN_4)}</div>\n                        <div className=\"yellow\">{wins.BIGGEST_WIN_4}&nbsp;€</div>\n                    </div>\n                )}\n                {wins.BIGGEST_WIN_5 !== 0 && (\n                    <div>\n                        <div>5. {getLabel(wins.NB_SELECTION_BIGGEST_WIN_5)}</div>\n                        <div className=\"yellow\">{wins.BIGGEST_WIN_5}&nbsp;€</div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './luckiest-win-story.component.css';\n\nexport const LuckiestWinStory = ({ team, rate }: { team: string; rate: number }) => {\n    return (\n        <div className=\"single\">\n            <div>\n                <img src=\"/trefle.svg\" alt=\"heart\" />\n            </div>\n            <div className=\"xs\">Ton équipe porte bonheur</div>\n            <div className=\"yellow xl\">{team}</div>\n            <div className=\"l\">\n                <span className=\"yellow\">{rate}&nbsp;%</span> DE TES PARIS GAGNÉS\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './luckiest-win-list-story.component.css';\n\ninterface Wins {\n    LUCKIEST_TEAM_1: string;\n    WIN_RATE_LUCKIEST_TEAM_1: number;\n    LUCKIEST_TEAM_2: string;\n    WIN_RATE_LUCKIEST_TEAM_2: number;\n    LUCKIEST_TEAM_3: string;\n    WIN_RATE_LUCKIEST_TEAM_3: number;\n    LUCKIEST_TEAM_4: string;\n    WIN_RATE_LUCKIEST_TEAM_4: number;\n    LUCKIEST_TEAM_5: string;\n    WIN_RATE_LUCKIEST_TEAM_5: number;\n}\n\nexport const LuckiestWinListStory = ({ wins }: { wins: Wins }) => {\n    return (\n        <div className=\"listComponent\">\n            <div>\n                Tes équipes\n                <br />\n                <span className=\"yellow\">porte bonheur</span>\n            </div>\n            <div className=\"list xs\">\n                <div>\n                    <div>1. {wins.LUCKIEST_TEAM_1}</div>\n                    <div className=\"yellow\">{wins.WIN_RATE_LUCKIEST_TEAM_1}&nbsp;%</div>\n                </div>\n                {wins.WIN_RATE_LUCKIEST_TEAM_2 !== 0 && (\n                    <div>\n                        <div>2. {wins.LUCKIEST_TEAM_2}</div>\n                        <div className=\"yellow\">{wins.WIN_RATE_LUCKIEST_TEAM_2}&nbsp;%</div>\n                    </div>\n                )}\n                {wins.WIN_RATE_LUCKIEST_TEAM_3 !== 0 && (\n                    <div>\n                        <div>3. {wins.LUCKIEST_TEAM_3}</div>\n                        <div className=\"yellow\">{wins.WIN_RATE_LUCKIEST_TEAM_3}&nbsp;%</div>\n                    </div>\n                )}\n                {wins.WIN_RATE_LUCKIEST_TEAM_4 !== 0 && (\n                    <div>\n                        <div>4. {wins.LUCKIEST_TEAM_4}</div>\n                        <div className=\"yellow\">{wins.WIN_RATE_LUCKIEST_TEAM_4}&nbsp;%</div>\n                    </div>\n                )}\n                {wins.WIN_RATE_LUCKIEST_TEAM_5 !== 0 && (\n                    <div>\n                        <div>5. {wins.LUCKIEST_TEAM_5}</div>\n                        <div className=\"yellow\">{wins.WIN_RATE_LUCKIEST_TEAM_5}&nbsp;%</div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './biggest-odds-story.component.css';\nimport { dayMonth } from '../services/date.service';\n\nexport const BiggestOddsStory = ({ odds, date, selection }: { date: string; odds: number; selection: number }) => {\n    return (\n        <div className=\"single\">\n            <div>\n                <img src=\"/cible.svg\" alt=\"heart\" />\n            </div>\n            <div className=\"xs\">Ta plus grosse cote gagnante</div>\n            <div className=\"odd xl\">{odds}</div>\n            <div className=\"xs\">Tu dois encore t'en souvenir</div>\n            <div className=\"xs\">C'était le {dayMonth(date)}</div>\n            <div className=\"xs\">\n                sur un combiné de <span className=\"yellow\">{selection} sélections</span>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './biggest-odds-list-story.component.css';\n\ninterface OddssList {\n    BIGGEST_ODD_1: number;\n    DATE_BIGGEST_ODD_1: string;\n    NB_SELECTION_BIGGEST_ODD_1: number;\n    BIGGEST_ODD_2: number;\n    DATE_BIGGEST_ODD_2: string;\n    NB_SELECTION_BIGGEST_ODD_2: number;\n    BIGGEST_ODD_3: number;\n    DATE_BIGGEST_ODD_3: string;\n    NB_SELECTION_BIGGEST_ODD_3: number;\n    BIGGEST_ODD_4: number;\n    DATE_BIGGEST_ODD_4: string;\n    NB_SELECTION_BIGGEST_ODD_4: number;\n    BIGGEST_ODD_5: number;\n    DATE_BIGGEST_ODD_5: string;\n    NB_SELECTION_BIGGEST_ODD_5: number;\n}\n\nexport const BiggestOddsListStory = ({ odds }: { odds: OddssList }) => {\n    const getLabel = (nbSelection: number) =>\n        nbSelection === 1 ? 'Pari simple' : `Combiné de ${nbSelection} sélections`;\n\n    return (\n        <div className=\"listComponent\">\n            <div>\n                Tes <span className=\"yellow\">plus grosses cotes</span>\n                <br />\n                gagnées cette année\n            </div>\n            <div className=\"list xs\">\n                <div>\n                    <div>1. {getLabel(odds.NB_SELECTION_BIGGEST_ODD_1)}</div>\n                    <div className=\"odd\">{odds.BIGGEST_ODD_1}</div>\n                </div>\n                {odds.BIGGEST_ODD_2 !== 0 && (\n                    <div>\n                        <div>2. {getLabel(odds.NB_SELECTION_BIGGEST_ODD_2)}</div>\n                        <div className=\"odd\">{odds.BIGGEST_ODD_2}</div>\n                    </div>\n                )}\n                {odds.BIGGEST_ODD_3 !== 0 && (\n                    <div>\n                        <div>3. {getLabel(odds.NB_SELECTION_BIGGEST_ODD_3)}</div>\n                        <div className=\"odd\">{odds.BIGGEST_ODD_3}</div>\n                    </div>\n                )}\n                {odds.BIGGEST_ODD_4 !== 0 && (\n                    <div>\n                        <div>4. {getLabel(odds.NB_SELECTION_BIGGEST_ODD_4)}</div>\n                        <div className=\"odd\">{odds.BIGGEST_ODD_4}</div>\n                    </div>\n                )}\n                {odds.BIGGEST_ODD_5 !== 0 && (\n                    <div>\n                        <div>5. {getLabel(odds.NB_SELECTION_BIGGEST_ODD_5)}</div>\n                        <div className=\"odd\">{odds.BIGGEST_ODD_5}</div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './best-day-story.component.css';\nimport { dayMonth } from '../services/date.service';\n\nexport const BestDayStory = ({ day, amount, bet }: { day: string; amount: number; bet: number }) => {\n    return (\n        <div className=\"single\">\n            <div>\n                <img src=\"/calendar.svg\" alt=\"calendar\" />\n            </div>\n            <div className=\"l\">\n                le <span className=\"yellow\">{dayMonth(day)}</span>\n            </div>\n            <div className=\"xs\">tu as gagné</div>\n            <div className=\"l yellow\">{bet} Paris</div>\n            <div className=\"xs\">Pour un montant total de</div>\n            <div className=\"l yellow\">{amount}&nbsp;€</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './biggest-odds-list-story.component.css';\nimport { dayMonth } from '../services/date.service';\n\ninterface Days {\n    BEST_DAY_DATE_1: string;\n    BEST_DAY_WIN_AMOUNT_1: number;\n    BEST_DAY_NB_BET_1: number;\n    BEST_DAY_DATE_2: string;\n    BEST_DAY_WIN_AMOUNT_2: number;\n    BEST_DAY_NB_BET_2: number;\n    BEST_DAY_DATE_3: string;\n    BEST_DAY_WIN_AMOUNT_3: number;\n    BEST_DAY_NB_BET_3: number;\n    BEST_DAY_DATE_4: string;\n    BEST_DAY_WIN_AMOUNT_4: number;\n    BEST_DAY_NB_BET_4: number;\n    BEST_DAY_DATE_5: string;\n    BEST_DAY_WIN_AMOUNT_5: number;\n    BEST_DAY_NB_BET_5: number;\n}\n\nexport const BestDayListStory = ({ days }: { days: Days }) => {\n    return (\n        <div className=\"listComponent\">\n            <div>\n                Tes <span className=\"yellow\">plus grosses journées</span>\n                <br />\n                en 2021\n            </div>\n            <div className=\"list xs\">\n                <div>\n                    <div>1. Le {dayMonth(days.BEST_DAY_DATE_1)}</div>\n                    <div className=\"yellow\">{days.BEST_DAY_WIN_AMOUNT_1}&nbsp;€</div>\n                </div>\n                {days.BEST_DAY_WIN_AMOUNT_2 !== 0 && (\n                    <div>\n                        <div>2. Le {dayMonth(days.BEST_DAY_DATE_2)}</div>\n                        <div className=\"yellow\">{days.BEST_DAY_WIN_AMOUNT_2}&nbsp;€</div>\n                    </div>\n                )}\n                {days.BEST_DAY_WIN_AMOUNT_3 !== 0 && (\n                    <div>\n                        <div>3. Le {dayMonth(days.BEST_DAY_DATE_3)}</div>\n                        <div className=\"yellow\">{days.BEST_DAY_WIN_AMOUNT_3}&nbsp;€</div>\n                    </div>\n                )}\n                {days.BEST_DAY_WIN_AMOUNT_4 !== 0 && (\n                    <div>\n                        <div>4. Le {dayMonth(days.BEST_DAY_DATE_4)}</div>\n                        <div className=\"yellow\">{days.BEST_DAY_WIN_AMOUNT_4}&nbsp;€</div>\n                    </div>\n                )}\n                {days.BEST_DAY_WIN_AMOUNT_5 !== 0 && (\n                    <div>\n                        <div>5. Le {dayMonth(days.BEST_DAY_DATE_5)}</div>\n                        <div className=\"yellow\">{days.BEST_DAY_WIN_AMOUNT_5}&nbsp;€</div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './thanks-story.component.css';\n\nexport const ThanksStory = () => {\n    return (\n        <div className=\"thanksStory\">\n            <div className=\"l\">Merci</div>\n            <div className=\"share xs\">Partager</div>\n        </div>\n    );\n};\n","import { useState } from 'react';\nimport { Story } from 'react-insta-stories/dist/interfaces';\nimport { StoryResponse } from '../interfaces/story-response.interface';\nimport { storyBuilder } from '../services/story-builder.service';\nimport { useFetch } from './fetch.hook';\n\nexport function useStories(username: string): Story[] {\n    const url = `https://gb04wxeoel.execute-api.eu-west-1.amazonaws.com/dev/betclic/stories?username=${username}`;\n    const [stories, setStories] = useState<Story[]>([]);\n\n    let { data } = useFetch<StoryResponse>(url);\n    if (data?.length && !stories.length) {\n        setStories(storyBuilder(data));\n    }\n\n    return stories;\n}\n","import React from 'react';\nimport { Story } from 'react-insta-stories/dist/interfaces';\nimport { StoryResponse } from '../interfaces/story-response.interface';\nimport { ContentCenter } from '../components/content-center.component';\nimport { StoryTypeEnum } from '../enums/story-type.enum';\nimport { IntroStory } from '../components/intro-story.component';\nimport { FavoriteTeamStory } from '../components/favorite-team-story.component';\nimport { LeastFavoriteTeamStory } from '../components/least-favorite-team-story.component';\nimport { FavoriteTeamListStory } from '../components/favorite-team-list-story.component';\nimport { BiggestWinStory } from '../components/biggest-win-story.component';\nimport { BiggestWinListStory } from '../components/biggest-win-list-story.component';\nimport { LuckiestWinStory } from '../components/luckiest-win-story.component';\nimport { LuckiestWinListStory } from '../components/luckiest-win-list-story.component';\nimport { BiggestOddsStory } from '../components/biggest-odds-story.component';\nimport { BiggestOddsListStory } from '../components/biggest-odds-list-story.component';\nimport { BestDayStory } from '../components/best-day-story.component';\nimport { BestDayListStory } from '../components/best-day-list-story.component';\nimport { ThanksStory } from '../components/thanks-story.component';\n\nexport function storyBuilder(data: StoryResponse): Story[] {\n    return data.map(story => {\n        switch (story.cardType) {\n            case StoryTypeEnum.Intro:\n                return {\n                    content: () => <IntroStory />,\n                };\n            case StoryTypeEnum.FavoriteTeam:\n                return {\n                    content: () => (\n                        <FavoriteTeamStory\n                            team={story.payload.FAVORITE_TEAM_1}\n                            count={story.payload.NB_BET_FAVORITE_TEAM_1}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.FavoriteTeamList:\n                return {\n                    content: () => <FavoriteTeamListStory teams={story.payload} />,\n                };\n            case StoryTypeEnum.LeastPreferedTeam:\n                return {\n                    content: () => (\n                        <LeastFavoriteTeamStory\n                            team={story.payload.LEAST_FAVORITE_TEAM_1}\n                            count={story.payload.NB_BET_LEAST_FAVORITE_TEAM_1}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.BiggestWin:\n                return {\n                    content: () => (\n                        <BiggestWinStory\n                            win={story.payload.BIGGEST_WIN_1}\n                            date={story.payload.DATE_BIGGEST_WIN_1}\n                            selection={story.payload.NB_SELECTION_BIGGEST_WIN_1}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.BiggestWinList:\n                return {\n                    content: () => <BiggestWinListStory wins={story.payload} />,\n                };\n            case StoryTypeEnum.LuckiestWin:\n                return {\n                    content: () => (\n                        <LuckiestWinStory\n                            team={story.payload.LUCKIEST_TEAM_1}\n                            rate={story.payload.WIN_RATE_LUCKIEST_TEAM_1}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.LuckiestWinList:\n                return {\n                    content: () => <LuckiestWinListStory wins={story.payload} />,\n                };\n            case StoryTypeEnum.BiggestOdds:\n                return {\n                    content: () => (\n                        <BiggestOddsStory\n                            odds={story.payload.BIGGEST_ODD_1}\n                            date={story.payload.DATE_BIGGEST_ODD_1}\n                            selection={story.payload.NB_SELECTION_BIGGEST_ODD_1}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.BiggestOddsList:\n                return {\n                    content: () => <BiggestOddsListStory odds={story.payload} />,\n                };\n            case StoryTypeEnum.BestDay:\n                return {\n                    content: () => (\n                        <BestDayStory\n                            day={story.payload.BEST_DAY_DATE_1}\n                            amount={story.payload.BEST_DAY_WIN_AMOUNT_1}\n                            bet={story.payload.BEST_DAY_NB_BET_1}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.BestDayList:\n                return {\n                    content: () => <BestDayListStory days={story.payload} />,\n                };\n            case StoryTypeEnum.ContentCenter:\n                return {\n                    content: () => (\n                        <ContentCenter\n                            title={story.payload.title}\n                            image_url={story.payload.image_url}\n                            text={story.payload.text}\n                            link_text={story.payload.link_text}\n                            web_link={story.payload.web_link}\n                        />\n                    ),\n                };\n            case StoryTypeEnum.Thanks:\n                return {\n                    content: () => <ThanksStory />,\n                };\n\n            default:\n                return {\n                    content: () => <div>unknown card</div>,\n                };\n        }\n    });\n}\n","import { Configuration } from '../interfaces/configuration.interface';\n\nconst configuration: Configuration = {\n    userQueryParam: 'username',\n    url: '',\n};\n\nexport default configuration;\n","import React, { useState } from 'react';\nimport { useFetch } from '../hooks';\nimport './username.component.css';\n\nexport const Username = () => {\n    const [value, setValue] = useState('');\n    const url = `https://gb04wxeoel.execute-api.eu-west-1.amazonaws.com/dev/betclic/users`;\n\n    let { data } = useFetch<string[]>(url);\n    let usernames: string[] = [];\n    if (data?.length && value) {\n        usernames = data\n            .filter((username: string) => username.toLowerCase().includes(value.toLowerCase()))\n            .filter((_: string, index: number) => index < 10);\n    }\n\n    return (\n        <div className=\"username\">\n            <img src=\"/Logo.svg\" className=\"logo\" alt=\"logo\" />\n            <span>Merci de saisir ton username</span>\n            <input value={value} onChange={e => setValue(e.target.value)} type=\"search\" autoFocus />\n            <div>\n                {usernames.map(username => (\n                    <a href={`/index.html?username=${username}`}>{username}</a>\n                ))}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Stories from 'react-insta-stories';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\nimport { useStories, useQueryParams } from './hooks';\nimport configuration from './config/configuration';\nimport { Username } from './components/username.component';\n\nfunction App() {\n    const user = useQueryParams(configuration.userQueryParam);\n    const stories = useStories(user);\n    if (!user) return <Username />;\n    if (!stories.length)\n        return (\n            <div className=\"loader\">\n                <Loader type=\"Puff\" color=\"#d2161e\" height={100} width={100} />\n            </div>\n        );\n\n    return (\n        <>\n            <img src=\"/Logo.svg\" className=\"logo-tiny\" alt=\"logo\" />\n            <Stories stories={stories} defaultInterval={6000} width={'100vw'} height={'100vh'} />\n            <audio autoPlay={true} src=\"/win.mp3\"></audio>\n        </>\n    );\n}\n\nexport default App;\n","export const useQueryParams = (key: string): string => {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(key) || '';\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}