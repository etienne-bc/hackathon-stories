{{ config(
    materialized='table'
) }}



WITH USER_FAVORITE_TEAM AS 
(
SELECT 
    USERNAME,
    CUSTOMER_ID,
    CASE 
        WHEN SELECTION_NAME = TEAM_A THEN TEAM_A
        WHEN SELECTION_NAME = TEAM_B THEN TEAM_B 
        WHEN SELECTION_NAME = 'Draw' THEN 'toto'
    END                                                 AS FAVORITE_TEAM 
FROM {{ ref('retro_customer_bet_selection') }}
WHERE 
    MARKET_NAME = 'Match Result'
    AND FAVORITE_TEAM != 'toto'
)

, RETRO_FAVORITE_TEAM AS (
SELECT 
    USERNAME,
    CUSTOMER_ID,
    FAVORITE_TEAM,
    COUNT(*) AS NB_BET_FAVORITE_TEAM
FROM USER_FAVORITE_TEAM 
GROUP BY 
    USERNAME,
    CUSTOMER_ID,
    FAVORITE_TEAM
ORDER BY USERNAME, NB_BET_FAVORITE_TEAM DESC
)

, TEAM_LIST AS (
SELECT 
  CUSTOMER_ID,
  USERNAME,
  FAVORITE_TEAM AS TEAM,
  NB_BET_FAVORITE_TEAM AS NB_BETS,
  row_number() over (partition by USERNAME order by NB_BETS DESC) as row_num
FROM RETRO_FAVORITE_TEAM
qualify row_num <= 5
)
  
SELECT 
   USERNAME AS USER_NAME,
   CUSTOMER_ID,
   MAX(CASE WHEN ROW_NUM = 1 THEN TEAM ELSE NULL END) AS FAVORITE_TEAM_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN TEAM ELSE NULL END) AS FAVORITE_TEAM_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN TEAM ELSE NULL END) AS FAVORITE_TEAM_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN TEAM ELSE NULL END) AS FAVORITE_TEAM_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN TEAM ELSE NULL END) AS FAVORITE_TEAM_5 ,
   MAX(CASE WHEN ROW_NUM = 1 THEN NB_BETS ELSE NULL END) AS NB_BET_FAVORITE_TEAM_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN NB_BETS ELSE NULL END) AS NB_BET_FAVORITE_TEAM_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN NB_BETS ELSE NULL END) AS NB_BET_FAVORITE_TEAM_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN NB_BETS ELSE NULL END) AS NB_BET_FAVORITE_TEAM_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN NB_BETS ELSE NULL END) AS NB_BET_FAVORITE_TEAM_5
FROM TEAM_LIST
GROUP BY 1, 2
        


/*
WITH USER_TEAMS AS (
SELECT 
  DISTINCT CUSTOMER_ID, USERNAME, TEAM_A AS TEAM
FROM {{ ref('retro_customer_bet_selection') }}
UNION 
SELECT 
  DISTINCT CUSTOMER_ID, USERNAME, TEAM_B AS TEAM
FROM {{ ref('retro_customer_bet_selection') }}
)
 
SELECT 
  UT.CUSTOMER_ID, 
  UT.USERNAME,
  UT.TEAM,
  COUNT(*) AS NB_BETS ,
  SUM(WINNING_AMOUNT) AS WIN_AMOUNT_FAVORITE_TEAM
FROM USER_TEAMS AS UT 
LEFT JOIN {{ ref('retro_customer_bet_selection') }} AS CS
    ON CS.CUSTOMER_ID = UT.CUSTOMER_ID 
  AND CS.USERNAME = UT.USERNAME
  AND (CS.TEAM_A = UT.TEAM OR CS.TEAM_B = UT.TEAM)
GROUP BY 
  UT.CUSTOMER_ID, 
  UT.USERNAME,
  UT.TEAM
*/