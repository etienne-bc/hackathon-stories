{{ config(
    materialized='table'
) }}

  
WITH USER_TEAMS AS (
SELECT 
  DISTINCT CUSTOMER_ID, USERNAME, TEAM_A AS TEAM
FROM {{ ref('retro_customer_bet_selection') }}
UNION 
SELECT 
  DISTINCT CUSTOMER_ID, USERNAME, TEAM_B AS TEAM
FROM {{ ref('retro_customer_bet_selection') }}
)


, USER_TEAMS_COUNT AS (
SELECT 
  UT.CUSTOMER_ID, 
    UT.USERNAME,
  UT.TEAM,
  COUNT(*)
FROM USER_TEAMS AS UT
INNER JOIN    ROX_DEV.dbt_jnadal.retro_customer_bet_selection AS CS
    ON CS.CUSTOMER_ID = UT.CUSTOMER_ID 
    AND CS.USERNAME = UT.USERNAME
    AND (CS.TEAM_A = UT.TEAM OR CS.TEAM_B = UT.TEAM)
GROUP BY 
    UT.CUSTOMER_ID, 
    UT.USERNAME,
  UT.TEAM
HAVING COUNT(*) > 3
)

, USER_TEAMS_RATE AS (
SELECT 
  UT.CUSTOMER_ID, 
  UT.USERNAME,
  UT.TEAM,
  SUM(CASE WHEN CS.HAS_WON THEN 1 ELSE 0 END)/COUNT(*) AS WON_RATE 
FROM USER_TEAMS_COUNT AS UT 
LEFT JOIN {{ ref('retro_customer_bet_selection') }} AS CS
    ON CS.CUSTOMER_ID = UT.CUSTOMER_ID 
    AND CS.USERNAME = UT.USERNAME
    AND (CS.TEAM_A = UT.TEAM OR CS.TEAM_B = UT.TEAM)
GROUP BY 
  UT.CUSTOMER_ID, 
  UT.USERNAME,
  UT.TEAM
)

, BIGGEST_RATES AS (
SELECT 
  CUSTOMER_ID
  , USERNAME
  , WON_RATE
  , TEAM
  , row_number() over (partition by USERNAME order by WON_RATE DESC) as row_num
FROM USER_TEAMS_RATE
  
qualify row_num <= 5
)
  
SELECT 
    DISTINCT
   USERNAME AS USER_NAME,
   CUSTOMER_ID,
   MAX(CASE WHEN ROW_NUM = 1 THEN TEAM ELSE NULL END) AS LUCKIEST_TEAM_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN TEAM ELSE NULL END) AS LUCKIEST_TEAM_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN TEAM ELSE NULL END) AS LUCKIEST_TEAM_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN TEAM ELSE NULL END) AS LUCKIEST_TEAM_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN TEAM ELSE NULL END) AS LUCKIEST_TEAM_5 ,

   MAX(CASE WHEN ROW_NUM = 1 THEN 100*WON_RATE ELSE NULL END)::NUMBER(38,0) AS WIN_RATE_LUCKIEST_TEAM_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN 100*WON_RATE ELSE NULL END)::NUMBER(38,0) AS WIN_RATE_LUCKIEST_TEAM_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN 100*WON_RATE ELSE NULL END)::NUMBER(38,0) AS WIN_RATE_LUCKIEST_TEAM_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN 100*WON_RATE ELSE NULL END)::NUMBER(38,0) AS WIN_RATE_LUCKIEST_TEAM_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN 100*WON_RATE ELSE NULL END)::NUMBER(38,0) AS WIN_RATE_LUCKIEST_TEAM_5 
FROM BIGGEST_RATES
GROUP BY 1, 2