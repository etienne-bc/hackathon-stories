{{ config(
    materialized='table'
) }}

WITH CUSTOMER_ODDS AS (
    SELECT DISTINCT
    CUSTOMER_ID
    , USERNAME
    , BET_DATE::DATE AS BET_DATE
    , BET_ODD
    , NB_SELECTION
FROM {{ ref('retro_customer_bet_selection') }}
WHERE HAS_WON
)
  
, BIGGEST_ODDS AS (
SELECT 
  CUSTOMER_ID
  , USERNAME
  , BET_DATE::DATE AS BET_DATE
  , BET_ODD
  , NB_SELECTION
  , row_number() over (partition by USERNAME order by BET_ODD DESC) as row_num
FROM CUSTOMER_ODDS
  
qualify row_num <= 5
)
  
SELECT 
   USERNAME AS USER_NAME,
   CUSTOMER_ID,
   MAX(CASE WHEN ROW_NUM = 1 THEN BET_ODD ELSE NULL END)::NUMBER(38,2) AS BIGGEST_ODD_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN BET_ODD ELSE NULL END)::NUMBER(38,2) AS BIGGEST_ODD_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN BET_ODD ELSE NULL END)::NUMBER(38,2) AS BIGGEST_ODD_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN BET_ODD ELSE NULL END)::NUMBER(38,2) AS BIGGEST_ODD_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN BET_ODD ELSE NULL END)::NUMBER(38,2) AS BIGGEST_ODD_5 ,
   
   MAX(CASE WHEN ROW_NUM = 1 THEN BET_DATE ELSE NULL END) AS DATE_BIGGEST_ODD_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN BET_DATE ELSE NULL END) AS DATE_BIGGEST_ODD_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN BET_DATE ELSE NULL END) AS DATE_BIGGEST_ODD_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN BET_DATE ELSE NULL END) AS DATE_BIGGEST_ODD_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN BET_DATE ELSE NULL END) AS DATE_BIGGEST_ODD_5 ,

   MAX(CASE WHEN ROW_NUM = 1 THEN NB_SELECTION ELSE NULL END) AS NB_SELECTION_BIGGEST_ODD_1 ,
   MAX(CASE WHEN ROW_NUM = 2 THEN NB_SELECTION ELSE NULL END) AS NB_SELECTION_BIGGEST_ODD_2 ,
   MAX(CASE WHEN ROW_NUM = 3 THEN NB_SELECTION ELSE NULL END) AS NB_SELECTION_BIGGEST_ODD_3 ,
   MAX(CASE WHEN ROW_NUM = 4 THEN NB_SELECTION ELSE NULL END) AS NB_SELECTION_BIGGEST_ODD_4 ,
   MAX(CASE WHEN ROW_NUM = 5 THEN NB_SELECTION ELSE NULL END) AS NB_SELECTION_BIGGEST_ODD_5 
FROM BIGGEST_ODDS
GROUP BY 1, 2